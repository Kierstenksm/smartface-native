name: Release Production
on:
  push:
    branches:
      - master
    paths:
      - '**/ts'
jobs:
  publishProd:
    name: Production Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@v1
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - name: Install Dependencies
        run: yarn
      - name: Build
        run: yarn build
      - name: Publish
        run: |
          npm run deploy:prod
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH }}

  buildAndPushToDockerHub:
    runs-on: ubuntu-latest
    needs: [publishProd]

    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: echo version
        run: echo "${{ steps.package-version.outputs.current-version}}"

      - name: is this cycle alpha
        if: contains(steps.package-version.outputs.current-version, 'alpha')
        run: echo "RELEASE_CYCLE=alpha" >> $GITHUB_ENV

      - name: is this cycle beta
        if: contains(steps.package-version.outputs.current-version, 'beta')
        run: echo "RELEASE_CYCLE=beta" >> $GITHUB_ENV

      - name: is this cycle release
        if: true && !contains(steps.package-version.outputs.current-version, 'beta') && !contains(steps.package-version.outputs.current-version, 'alpha')
        run: echo "RELEASE_CYCLE=release" >> $GITHUB_ENV

      - name: echo release cycle
        run: echo "$RELEASE_CYCLE"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ref:${{env.RELEASE_CYCLE}}

      - name: Run the image in a container
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/ref:${{env.RELEASE_CYCLE}}
          run: |
            echo ${{ steps.docker_build.outputs.digest }}
    outputs:
      RELEASE_CYCLE: ${{env.RELEASE_CYCLE}}
  applyChanges:
    runs-on: ubuntu-latest
    needs: [buildAndPushToDockerHub]
    steps:
    - name: Execute Upgrade Command on Server
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          cd ${{ secrets.SERVER_DOC_HELM_PATH }}
          echo ${{ secrets.SERVER_PASSWORD}} | ${{ secrets.SERVER_DOC_UPDATE_COMMAND }} ${{ secrets.SERVER_DOC_DEPLOYMENT_PREFIX }}-${{needs.buildAndPushToDockerHub.outputs.RELEASE_CYCLE}}


